---
// GET request made to lazy load categories
import flatten from "lodash/flatten";
import { getCollection, z } from "astro:content";
import settings from "~/settings/years-setup.json";

import Category from "~/components/category.astro";
import { fetchPageProps } from "~/fetch-page-props";

export const partial = true;
export const prerender = true;

export async function getStaticPaths() {
  const collectionItems = await getCollection("categories");
  const paths = flatten(
    flatten(
      settings.map(({ year, languages }) =>
        languages.map((language) => {
          const collectionItem = collectionItems.find(
            (item) => item.id === year.toString()
          );
          const categorySlugs = collectionItem!.data.map((item) => item.key);
          return categorySlugs.map((category) => ({
            year: year.toString(),
            language,
            category,
          }));
        })
      )
    )
  );
  return paths.map(({ year, language, category }) => ({
    params: {
      year,
      language,
      category,
    },
  }));
}

const searchSchema = z.object({
  year: z.coerce.number().int().min(2016).max(2023),
  category: z.string(),
  language: z.string(),
});

const {
  year,
  category: categorySlug,
  language,
} = searchSchema.parse(Astro.params);

const { projectsByTag, categories } = await fetchPageProps(year, language!);

const projects = projectsByTag[categorySlug];
const category = categories.find((cat) => cat.key === categorySlug);
---

<Category
  projects={projects}
  year={year}
  language={language}
  category={category}
/>
