---
export type Props = {
  currentLanguage: string;
  year: number;
  languages: RisingStars.Language[];
};

const { currentLanguage, year, languages } = Astro.props;

function getPath(year: number, language: string) {
  return `/${year}/${language}`;
}
---

<script>
  document
    .getElementById("language-dropdown")!
    .addEventListener("change", (event: Event) => {
      const path = (event.target as HTMLSelectElement).value;
      window.location.href = path;
    });
</script>
<div class="language-menu-mobile">
  <div class="control has-icons-left">
    <div class="select">
      <select
        id="language-dropdown"
        class="language-dropdown"
        value={getPath(year, currentLanguage)}
        aria-label="Language"
      >
        {
          languages.map((item) => (
            <option value={getPath(year, item.code)}>{item.text}</option>
          ))
        }
      </select>
    </div>
    <div class="icon is-left">
      <svg width="24" height="24">
        <use href={`/sprite.svg#globe-icon`}></use>
      </svg>
    </div>
  </div>
</div>

<style>
  .language-menu-mobile {
    margin-left: 1rem;
  }

  @media (min-width: 750px) {
    .language-menu-mobile {
      display: none;
    }
  }
</style>
