---
import setup from "~/settings/years-setup.json";

export interface Props {
  year: number;
  language: string;
  category: string;
}

const { language, year, category } = Astro.props;
const years = setup.map((item) => item.year) as number[];

const hasPreviousYear = year > years.at(0);
const hasNextYear = year < years.at(-1);

function getRequestURL(year?: number) {
  const endPoint = `/partials/get-category`;
  const searchParams = new URLSearchParams({
    category,
    language,
  });
  if (year) {
    searchParams.set("year", year.toString()); // when using the select, `year` is added automatically by htmx
  }
  return `${endPoint}/?${searchParams.toString()}`;
}
---

<nav>
  <div>
    <button
      type="button"
      class="button"
      disabled={!hasPreviousYear}
      aria-label="Previous year"
      hx-get={getRequestURL(year - 1)}
      hx-trigger="click"
      hx-target="closest section"
      hx-swap="outerHTML"
      hx-indicator="closest .header"
    >
      <svg width="20" height="20">
        <use href={`/sprite.svg#arrow-left-icon`}></use>
      </svg>
    </button>
  </div>
  <div class="control has-icons-right">
    <div class="select">
      <select
        name="year"
        aria-label="Year"
        hx-get={getRequestURL()}
        hx-trigger="change"
        hx-target="closest section"
        hx-swap="outerHTML"
        hx-indicator="closest .header"
      >
        {
          years.map((y) => {
            return y === year ? (
              <option selected>{year}</option>
            ) : (
              <option value={y}>{y}</option>
            );
          })
        }
      </select>
      <div class="icon is-right">
        <svg width="24" height="24">
          <use href={`/sprite.svg#chevron-down-icon`}></use>
        </svg>
      </div>
    </div>
  </div>
  {
    hasNextYear && (
      <div>
        <button
          type="button"
          class="button"
          disabled={!hasNextYear}
          aria-label="Next year"
          hx-get={getRequestURL(year + 1)}
          hx-trigger="click"
          hx-target="closest section"
          hx-swap="outerHTML"
          hx-indicator="closest .header"
        >
          <svg width="20" height="20">
            <use href={`/sprite.svg#arrow-right-icon`} />
          </svg>
        </button>
      </div>
    )
  }
</nav>

<style>
  nav {
    display: flex;
    align-items: center;
    border: 1px solid var(--grey3);
    border-radius: 4px;
  }
  button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0;
    border-width: 0;
    height: 36px;
    width: 36px;
    color: inherit;
  }
  .select select {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
  }
  .select select:hover {
    background-color: white;
  }
  .control {
    border-left: 1px solid var(--grey3);
    border-right: 1px solid var(--grey3);
  }
  .icon {
    color: var(--mediumgrey);
  }
  .select:hover .icon {
    color: var(--activeLinkColor);
  }
</style>
