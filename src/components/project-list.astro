---
import ProjectAvatar from "./project-avatar.astro";
import { formatStarNumber } from "./project-shared.ts";
import ProjectInteractive from "./project-interactive.tsx";
import ProjectDetails from "./project-details.astro";

interface Props {
  projects: RisingStars.Project[];
  openFirstProject: boolean;
  language: string;
  year: number;
}

const { projects, openFirstProject, language, year } = Astro.props;
---

{
  projects.map((project, index) => {
    const widthPercent = ((project.delta / projects[0].delta) * 100).toFixed();
    return (
      <ProjectInteractive
        client:visible
        defaultIsOpen={openFirstProject && index === 0}
      >
        <Fragment slot="summary">
          <div class="ranking">{index + 1}</div>
          <div class="inner">
            <div class="icon">
              <ProjectAvatar project={project} size={50} />
            </div>
            <div class="main-column">
              <div
                class="project-table-bar"
                style={`width: ${widthPercent}%;`}
              />
              <h3 class="project-name">{project.name}</h3>
              <div class="description">{project.description}</div>
            </div>
            <div class="stars">+{formatStarNumber(project.delta, 1)}â˜†</div>
          </div>
        </Fragment>
        <ProjectDetails
          slot="details"
          project={project}
          language={language}
          year={year}
        />
      </ProjectInteractive>
    );
  })
}
