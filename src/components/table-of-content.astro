---
import { useTranslations } from "~/i18n/utils";
import ProjectAvatar from "./project-avatar.astro";

export interface Props {
  categories: RisingStars.Category[];
  projects: RisingStars.ProjectsByCategory;
  language: string;
  year: number;
}
const { language, year, projects, categories } = Astro.props;

const { t } = await useTranslations(language, year);

function getMinCount(count: number, index: number) {
  return index === 0 ? Math.min(count, 10) : Math.min(count, 5);
}
---

<div class="toc container small-container">
  <h2>{t("introduction.table_of_contents")}</h2>
  <ol>
    {
      categories.map((item, i) => {
        const key = item.key.replace(/-/gi, "");
        return (
          <li>
            <a class="toc-link" href={`#section-${item.key}`}>
              <span class="toc-link-label">{t(`categories.${key}`)}</span>
              <div class="toc-projects">
                {projects[item.key]
                  .slice(0, getMinCount(item.count, i))
                  .map((project) => (
                    <ProjectAvatar project={project} size={30} />
                  ))}
              </div>
            </a>
          </li>
        );
      })
    }
    <li>
      <a class="toc-link toc-link-conclusion" href={`#conclusion`}>
        {t("conclusion")}
      </a>
    </li>
  </ol>
</div>

<style>
  .toc {
    text-align: center;
    margin-bottom: 2rem;
  }
  ul,
  ol {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px;
    list-style-type: none;
    margin: 0;
    padding: 0;
  }
  /* Make introduction and conclusion span the 2 columns */
  li:first-child,
  li:last-child {
    grid-column: 1 / -1;
  }

  .toc-link {
    display: flex;
    flex-direction: column;
    gap: 10px;
    font-size: var(--larger-font);
    font-family: "Space Mono", monospace;
    font-weight: 400;
    border: 1px dashed var(--border-color);
    padding: var(--spacing);
  }
  .toc-link:hover {
    background: rgba(255, 255, 255, 0.5);
  }
  .toc-link:hover img {
    filter: none;
    opacity: 1;
  }

  .toc-projects {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 5px;
  }
  .toc-projects :global(img) {
    filter: grayscale(100%);
    opacity: 0.7;
  }

  @media (max-width: 499px) {
    ol {
      grid-template-columns: 1fr;
    }
    /* Show only the 5 first projects on small screens */
    .toc-projects :global(img:nth-child(n + 6)) {
      display: none;
    }
  }
</style>
