---
import { useTranslations } from "~/i18n/utils";

import ProjectList from "./project-list.astro";
import TranslatedBlock from "./translated-block.astro";
import Guest from "./guest.astro";
import LoadingIndicator from "./loading-indicator.astro";
import CategoryNav from "./category-nav.astro";

export interface Props {
  language: string;
  year: number;
  projects: RisingStars.Project[];
  category: RisingStars.Category;
}
const { language, year, projects, category } = Astro.props;
const { availableComments, key: tag, limit = 5, count, guest } = category;

const key = tag.replace(/-/gi, "");
const { t } = await useTranslations(language, year);

const topProjects = projects.slice(0, limit);

const hasComment = !availableComments || availableComments.includes(language);

// Only show the nav for categories that exist for every year
const showNav = [
  "all",
  "framework",
  "nodejs-framework",
  "react",
  "mobile",
  "build",
  "test-framework",
  "ssg",
].includes(tag);
---

<section class="section" id={`category-${tag}`}>
  <div class={`container${hasComment ? "" : " small-container"}`}>
    <a id={`section-${tag}`} aria-hidden="true"></a>
    <div class="header">
      <div class="header-inner">
        <h2>
          {t(`categories.${key}`)}
          <img
            class="htmx-indicator"
            width="38"
            height="38"
            src="/loading.svg"
            alt="Loading"
            style={{
              position: "absolute",
              right: "50px",
              top: "50%",
              transform: "translateY(-50%)",
            }}
          />
        </h2>
        {
          showNav && (
            <CategoryNav language={language} year={year} category={tag} />
          )
        }
      </div>
    </div>

    <div class={`${hasComment ? "project-category-grid" : ""}`}>
      <div class={`rankings${hasComment ? " column1" : ""}`}>
        <ProjectList
          projects={topProjects}
          language={language}
          year={year}
          openFirstProject={tag === "all"}
        />

        <button
          type="button"
          class="button show-more-button"
          hx-post=`/${year}/${language}/${tag}/projects`
          hx-trigger="click"
          hx-target={`#category-${tag} .rankings`}
          hx-swap="innerHTML"
        >
          SHOW MORE
          <LoadingIndicator />
        </button>
      </div>
      <div>
        {
          hasComment && (
            <div class="column2">
              {guest && (
                <Guest guestId={guest} language={language} year={year} />
              )}
              <TranslatedBlock
                id={`categories/${tag}`}
                language={language}
                year={year}
              />
            </div>
          )
        }
      </div>
    </div>
  </div>
</section>

<style>
  .header {
    font-size: var(--larger-font);
    border: 1px solid var(--border-color);
    margin-bottom: calc(var(--spacing) * 2);
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 20px;
    position: relative;
  }

  .header-inner {
    display: flex;
    gap: 2rem;
  }
  h2 {
    font-size: var(--larger-font);
    margin: 0;
    text-align: center;
  }

  @media screen and (max-width: 768px) {
    .header-inner {
      flex-direction: column;
      justify-content: center;
      align-items: center;
      gap: 10px;
    }
  }
</style>
